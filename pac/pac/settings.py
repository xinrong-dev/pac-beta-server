"""
Django settings for pac project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import datetime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'ln6bqw(n0^mq*_*h2%qm_x!cv&c8c&5ij2i@n65+g7jntj#=17'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

try:
    from .local_settings import *
except ImportError:
    pass

# Application definition

INSTALLED_APPS = [
    'simpleui',                        # Admin UI
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',                         # AWS storage
    'taggit',                           # tag
    'taggit_serializer',                 # tag serializer
    'rest_framework',                   # restful framework
    'corsheaders',                      # cors
    'accounts',
    'works',
    'chats',
    'drf_yasg',                         # api test
    # 'notifications'                     # notifications
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pac.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "utils/templates"),
            os.path.join(BASE_DIR, "templates")
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pac.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# specify user model
AUTH_USER_MODEL = 'accounts.Member'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ja-jp'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

if DEBUG:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, "static"),
    ]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, "static")

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ),
}

# add domain that can request to the linux server
CORS_ORIGIN_ALLOW_ALL = True

# jwt_auth
JWT_AUTH = {
    'JWT_SECRET_KEY': SECRET_KEY,
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),
    'JWT_ALLOW_REFRESH': True,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'accounts.payload.jwt_response_payload_handler',
    # 'JWT_PAYLOAD_HANDLER': 'accounts.jwt.jwt_payload_handler',
}

# simple ui settings
SIMPLEUI_HOME_INFO = False
SIMPLEUI_HOME_ACTION = True
SIMPLEUI_STATIC_OFFLINE = True

SIMPLEUI_CONFIG = {
    'system_keep': False,
    'menu_display': ['ホーム', '作品管理', '基礎データ', 'ユーザーと権限'],
    'menus': [
        {
            'name': '作品管理',
            'icon': 'fa fa-university',
            'models': [
                {
                    'name': '作品',
                    'icon': 'fa fa-archive',
                    'url': 'works/work'
                },
                {
                    'name': 'イイネ',
                    'icon': 'fa fa-thumbs-up',
                    'url': 'works/favorite'
                },
                {
                    'name': 'コメント',
                    'icon': 'fa fa-comment',
                    'url': 'works/comment'
                }
            ]
        },
        {
            'name': '基礎データ',
            'icon': 'fa fa-database',
            'models': [
                {
                    'name': 'ジャンル',
                    'icon': 'fa fa-book',
                    'url': 'accounts/genre'
                },
                {
                    'name': 'CC',
                    'icon': 'fa fa-puzzle-piece',
                    'url': 'works/ccsetting'
                },
                {
                    'name': 'バナー',
                    'icon': 'fa fa-image',
                    'url': 'accounts/banner'
                },
                {
                    'name': 'メッセージ',
                    'icon': 'fa fa-envelope',
                    'url': 'chats/message'
                },
                {
                    'name': '通知',
                    'icon': 'fa fa-bell',
                    'url': 'notifications/notification'
                }
            ]
        },
        {
            'name': 'ユーザーと権限',
            'icon': 'fas fa-shield-alt',
            'models': [
                {
                    'name': 'ユーザー',
                    'icon': 'fas fa-user',
                    'url': 'accounts/member'
                },
                {
                    'name': 'グループ',
                    'icon': 'fas fa-users-cog',
                    'url': 'auth/group'
                }
            ]
        }
    ]
}

# Swagger settings
SWAGGER_SETTINGS = {
    # "DEFAULT_GENERATOR_CLASS": "rest_framework.schemas.generators.BaseSchemaGenerator",
    'USE_SESSION_AUTH': True,
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}

# site header and title
SITE_HEADER = 'PACシステム'
SITE_TITLE = 'PACシステム'

# import dj_database_url
# DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)

# Configure Django App for Heroku.
# import django_heroku
# django_heroku.settings(locals())

# notifications settings
# NOTIFICATIONS_CHANNELS = {
#     'websocket': 'chats.channels.BroadCastWebSocketChannel'
# }

# NOTIFICATIONS_USE_WEBSOCKET = True
# NOTIFICATIONS_RABBIT_MQ_URL = 'http://192.168.0.254:15672'

# django resized
DJANGORESIZED_DEFAULT_QUALITY = 75
DJANGORESIZED_DEFAULT_KEEP_META = True
DJANGORESIZED_DEFAULT_FORCE_FORMAT = 'JPEG'
DJANGORESIZED_DEFAULT_FORMAT_EXTENSIONS = {'JPEG': ".jpg"}
DJANGORESIZED_DEFAULT_NORMALIZE_ROTATION = True
